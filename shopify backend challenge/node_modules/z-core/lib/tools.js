// Generated by CoffeeScript 1.7.1
(function() {
  var Promise,
    __hasProp = {}.hasOwnProperty;

  Promise = require('es6-promise').Promise;

  exports.pairs = function(obj) {
    var key, value, _results;
    _results = [];
    for (key in obj) {
      if (!__hasProp.call(obj, key)) continue;
      value = obj[key];
      _results.push([key, value]);
    }
    return _results;
  };

  exports.keys = function(obj) {
    var key, value, _results;
    _results = [];
    for (key in obj) {
      if (!__hasProp.call(obj, key)) continue;
      value = obj[key];
      _results.push(key);
    }
    return _results;
  };

  exports.values = function(obj) {
    var key, value, _results;
    _results = [];
    for (key in obj) {
      if (!__hasProp.call(obj, key)) continue;
      value = obj[key];
      _results.push(value);
    }
    return _results;
  };

  exports.object = function(keys, values) {
    var i, key, out, _i, _len;
    out = {};
    for (i = _i = 0, _len = keys.length; _i < _len; i = ++_i) {
      key = keys[i];
      out[key] = values[i];
    }
    return out;
  };

  exports.resolveAll = function(list) {
    return Promise.all(list);
  };

  exports.isPrimitive = function(obj) {
    var types;
    types = ['Function', 'String', 'Number', 'Date', 'RegExp', 'Boolean'];
    if (obj === true || obj === false) {
      return true;
    }
    return types.some(function(type) {
      return Object.prototype.toString.call(obj) === ("[object " + type + "]");
    });
  };

  exports.isArray = Array.isArray || function(obj) {
    return Object.prototype.toString.call(obj) === "[object Array]";
  };

  exports.objectCreate = Object.create || function(obj) {
    var F;
    F = function() {};
    F.prototype = obj;
    return new F;
  };

  exports.proc = function(f) {
    return function() {
      f.apply(this, arguments);
      return void 0;
    };
  };

}).call(this);
